{"version":3,"sources":["stores/api.js","stores/authStore.js","stores/mainStore.js","containers/Layout.jsx","containers/Steps.jsx","containers/Results.jsx","containers/Statistic.jsx","containers/Login.jsx","components/StepElementOption.jsx","components/Section.jsx","components/TaggingElements.jsx","components/RawText.jsx","components/StepElementsList.jsx","components/LoadingStep.jsx","containers/Step.jsx","components/Book.jsx","components/LoadingResult.jsx","containers/Result.jsx","containers/NotFound.jsx","App.js","index.js"],"names":["api","axios","create","baseURL","authStore","makeObservable","this","key","apikey","Cookie","set","loginData","post","r","setApiKey","data","status","response","message","headers","get","console","error","remove","log","observable","computed","action","interceptors","use","logout","Promise","reject","YAML","require","mainStore","updateApiKey","currentYAMLDraft","text","draft","parse","results","Object","keys","map","title","body","steps","meta","step","push","find","saveDraft","index","findIndex","newSteps","splice","result","newResults","forEach","options","version","Math","round","router_politics","steps_stack","stringify","patch","filter","Array","isArray","placeholders","placeholder","type","items","item","value","to_results","indexOf","undefined","next_steps","Content","Layout","Footer","Sider","pages","statistic","CustomLayout","children","useState","collapsed","setCollapsed","history","useHistory","locationStack","useLocation","pathname","split","i","publish","a","publishDraft","notification","success","style","minHeight","collapsible","onCollapse","className","alt","src","process","width","theme","defaultSelectedKeys","mode","onClick","replace","Item","icon","BranchesOutlined","CheckSquareOutlined","LineChartOutlined","LogoutOutlined","margin","display","location","to","float","padding","textAlign","confirm","Modal","colors","demography","domain","user_variant","subdomain","columns","dataIndex","render","slice","stats","tag","color","size","checkDelStep","length","WarningTwoTone","twoToneColor","CheckCircleTwoTone","content","join","okText","okType","cancelText","onOk","deleteStep","onCancel","observer","visible","setVisible","Form","useForm","form","useEffect","getDraft","dataSource","pagination","defaultPageSize","showSizeChanger","position","loading","footer","htmlType","height","PlusOutlined","bind","submit","layout","name","onFinish","values","addStep","label","rules","required","validator","rule","s","match","resolve","Option","TextArea","description","books","book","checkDelResults","deleteResult","addResult","quotes","annotations","format","date","Date","toISOString","Statistic","download","blob","Blob","downloadUrl","URL","createObjectURL","document","createElement","href","appendChild","click","getLikesStatistic","days","getAllLikesStatistic","pastDate","getDate","setDate","from","responseType","getDailyRepo","getWeeklyRepo","getMonthlyRepo","getAnswersRepo","menu","parseInt","overlay","Login","getApiKey","res","initialValues","remember","prefix","UserOutlined","LockOutlined","Select","StepElementOption","option","raw_text","userVariant","setUserVariant","paddingRight","initialValue","disabled","valuePropName","defaultValue","onSelect","e","marginTop","danger","shape","CloseOutlined","Section","initialHidden","hidable","hidden","setHidden","marginBottom","CaretUpOutlined","CaretDownOutlined","TaggingElements","element","onRemove","setOptions","id","marginRight","whitespace","visibility","gui_options","minSelected","min","maxSelected","statistics_params","ignoreOnlyRawText","random","block","RawText","isNumber","setIsNumber","autoSize","minRows","paddingBottom","max","error_message","StepElementsList","elements","setElements","placement","paddingTop","LoadingStep","pickBy","isObject","mapValues","deepPick","v","newValue","useParams","setStep","useRef","toSave","setToSave","then","onSave","p","onChange","target","maxRows","Book","move","booksCount","isListField","ArrowUpOutlined","ArrowDownOutlined","List","fields","add","field","validateTrigger","noStyle","MinusCircleOutlined","marginLeft","LoadingResult","f","setResult","NotFound","subTitle","extra","basename","path","exact","loggedIn","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.aac801b5.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: process.env.NODE_ENV === 'production'?'https://books.youngreaders.ru':'http://main.localhost'\n});\n\n\nexport default api","import { makeObservable, observable, computed, action } from \"mobx\"\nimport Cookie from \"js-cookie\"\nimport api from \"./api\";\n\n\nclass AuthStore {\n    constructor() {\n        makeObservable(this)\n    }\n\n    @observable\n    apikey = Cookie.get(\"yreaders_key\")||null\n\n    @computed\n    get loggedIn() {\n        console.log(this.apikey, !!this.apikey)\n        return !!this.apikey\n    }\n\n    @action\n    setApiKey(key) {\n        if (key) {\n            this.apikey = key;\n            Cookie.set(\"yreaders_key\", key);\n        } else {\n            this.apikey = null;\n        }\n    }\n\n    @action\n    async getApiKey(loginData) {\n        try {\n            const r = await api.post(\"/api/sys/key\", {\n                ...loginData\n            });\n            this.setApiKey(r.data[\"x-api-key\"])\n            return {status: 'ok'}\n\n        } catch (error) {\n            this.setApiKey(null)\n            if(error.response && error.response.status === 401)\n                return {status: 'err', message: 'Неверный логин или пароль'}\n            return {status: 'err', message: 'Ошибка подключения к серверу'}\n        }\n    }\n\n    @action\n    async updateApiKey() {\n        try {\n            const r = await api(\"/api/sys/key\", {\n                headers: {\n                    \"x-api-key\": this.apikey || Cookie.get(\"yreaders_key\")\n                }\n            });\n            this.setApiKey(r.data[\"x-api-key\"])\n        } catch (error) {\n            this.setApiKey(null)\n            console.error(error);\n        }\n    }\n\n    @action\n    logout() {\n        this.apikey = null;\n        Cookie.remove(\"yreaders_key\");\n    }\n}\n\nconst authStore = new AuthStore()\n\napi.interceptors.response.use(null, error => {\n    if (error.response && error.response.status === 401) {\n        authStore.logout()\n    }\n    return Promise.reject(error);\n});\n\nexport default authStore;","import {makeObservable, observable, action} from \"mobx\"\nimport authStore from \"./authStore\";\nimport api from \"./api\";\n\nconst YAML = require(\"yaml\");\n\n\nclass MainStore {\n    constructor() {\n        makeObservable(this)\n    }\n\n    @observable\n    currentYAMLDraft\n\n    @observable\n    steps = []\n\n    @observable\n    results = []\n\n    @observable\n    meta = {}\n\n    @action\n    async getDraft() {\n        try {\n            console.log(\"hello\")\n            await authStore.updateApiKey()\n            const url = `/api/sys/drafts/prod.yml`;\n            const r = await api(url, {\n                headers: {\"x-api-key\": authStore.apikey}\n            });\n            this.currentYAMLDraft = r.data.text\n            const draft = YAML.parse(this.currentYAMLDraft)\n            this.results = Object.keys(draft.results).map(key => {\n                return {\n                    title: key,\n                    body: draft.results[key]\n                }\n            });\n            this.steps = Object.keys(draft.steps).map(key => {\n                return {\n                    title: key,\n                    body: draft.steps[key]\n                }\n            });\n            this.meta = draft.meta\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    @action\n    addStep(step) {\n        try {\n            this.steps.push(step)\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    @action\n    async setStep(title, body) {\n        try {\n            const step = this.steps.find(step => step.title === title);\n            step.body = body;\n            await this.saveDraft()\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n\n    @action\n    async deleteStep(title) {\n        try {\n            const index = this.steps.findIndex(step => step.title === title);\n            const newSteps = [...this.steps]\n            newSteps.splice(index, 1);\n            this.steps = newSteps\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    @action\n    addResult(result) {\n        console.log(result)\n        try {\n            this.results.push(result)\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    @action\n    async setResult(title, body) {\n        try {\n            const result = this.results.find(step => step.title === title);\n            result.body = body;\n            await this.saveDraft()\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    @action\n    async deleteResult(title, body) {\n        try {\n            const index = this.results.findIndex(step => step.title === title);\n            const newResults = [...this.results]\n            newResults.splice(index, 1);\n            this.results = newResults\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    @action\n    async saveDraft() {\n        const steps = {};\n        this.steps.forEach(step => steps[step.title] = step.body)\n        const results = {};\n        this.results.forEach(result => results[result.title] = result.body)\n\n        await authStore.updateApiKey();\n        const url = `/api/sys/drafts/prod.yml`;\n        const options = {\n            headers: {\"x-api-key\": authStore.apikey}\n        };\n\n        try {\n            const draft = {\n                meta: {\n                    title: this.meta.title || 'draft',\n                    version: Math.round((this.meta.version || 1) * 10 + 1) / 10\n                },\n                router_politics: {\n                    steps_stack: ['intro', 'final']\n                },\n                steps,\n                results\n            }\n\n            await api.post(url, {text: YAML.stringify(draft)}, options)\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    @action\n    async publishDraft() {\n        try {\n            await this.saveDraft();\n            await authStore.updateApiKey();\n            const url = `/api/sys/drafts/active/prod.yml`;\n            const options = {\n                headers: {\"x-api-key\": authStore.apikey}\n            };\n            await api.patch(url, null, options);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n\n    checkDelResults(title) {\n        const steps = this.steps.filter(step => {\n            if (Array.isArray(step?.body?.placeholders))\n                for (let placeholder of step.body.placeholders) {\n                    if (placeholder.type === 'tagging_one' || placeholder.type === 'tagging_many') {\n                        for (let item of placeholder.items) {\n                            const index = item?.value?.to_results?.indexOf(title);\n                            if (index !== undefined && index !== -1) {\n                                console.log(item?.value?.to_results?.indexOf(title))\n                                return true\n                            }\n                        }\n                    }\n\n                }\n            return false\n        })\n\n        return steps.map(step => step.title)\n    }\n\n    checkDelStep(title) {\n        const steps = this.steps.filter(step => {\n            if (step?.body?.next_steps && step.body.next_steps.indexOf(title) !== -1)\n                return true\n\n            if (Array.isArray(step?.body?.placeholders))\n                for (let placeholder of step.body.placeholders) {\n                    if (placeholder.type === 'tagging_one' || placeholder.type === 'tagging_many') {\n                        for (let item of placeholder.items) {\n                            const index = item?.value?.next_steps?.indexOf(title);\n                            if (index !== undefined && index !== -1) {\n                                return true\n                            }\n                        }\n                    }\n\n                }\n            return false\n        })\n\n        return steps.map(step => step.title)\n    }\n}\n\nconst mainStore = new MainStore()\n\n\nexport default mainStore;","import React, {useState} from \"react\";\nimport {Layout, Menu, Breadcrumb, Button, notification} from 'antd';\nimport {LineChartOutlined, BranchesOutlined, CheckSquareOutlined, LogoutOutlined,} from '@ant-design/icons';\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\nimport mainStore from \"../stores/mainStore\";\nimport authStore from \"../stores/authStore\";\n\nconst {Content, Footer, Sider} = Layout;\n\nconst pages = {\n    steps: 'Шаги',\n    results: 'Результаты',\n    statistic: 'Статистика',\n    error: 'Ошибка',\n    logout: 'Выйти'\n}\n\nconst CustomLayout = ({children}) => {\n    const [collapsed, setCollapsed] = useState(false);\n    const history = useHistory();\n    const location = useLocation();\n    const locationStack = location.pathname.split('/').filter(i => i!=='');\n\n    const onClick = ({key}) => {\n        if (key === 'logout'){\n            authStore.logout();\n            return history.replace(`/login/`)\n        }\n        authStore.updateApiKey();\n        history.push(`/${key}/`)\n    }\n\n    const publish = async () => {\n        try{\n            await mainStore.publishDraft()\n            notification.success({message: \"Изменения успешно опубликованы\"})\n        }catch (e) {\n            notification.error({message: \"Произошла ошибка при публикации изменений\"})\n        }\n    }\n\n    return (\n        <Layout style={{minHeight: '100vh'}}>\n            <Sider\n                collapsible\n                collapsed={collapsed}\n                onCollapse={setCollapsed}\n            >\n                <div className=\"logo\"><img alt=\"Живая классика\" src={process.env.PUBLIC_URL+\"/logo.svg\"} width=\"100%\"/></div>\n                <Menu theme=\"dark\" defaultSelectedKeys={[locationStack[0]]} mode=\"inline\" onClick={onClick}>\n                    <Menu.Item key=\"steps\" icon={<BranchesOutlined/>}>\n                        {pages.steps}\n                    </Menu.Item>\n                    <Menu.Item key=\"results\" icon={<CheckSquareOutlined/>}>\n                        {pages.results}\n                    </Menu.Item>\n                    <Menu.Item key=\"statistic\" icon={<LineChartOutlined/>}>\n                        {pages.statistic}\n                    </Menu.Item>\n                    <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>\n                        {pages.logout}\n                    </Menu.Item>\n                </Menu>\n            </Sider>\n            <Layout className=\"site-layout\">\n                <Content style={{margin: '0 16px'}}>\n                    <Breadcrumb style={{margin: '16px 0', display: \"inline-block\"}}>\n                        {\n                            locationStack.map(location =>\n                                <Breadcrumb.Item key={`breadcrumb-${location}`}>\n                                    {\n                                        pages[location]?<Link to={`/${location}`}>{pages[location]}</Link>:location\n                                    }\n\n                                </Breadcrumb.Item>)\n                        }\n\n                    </Breadcrumb>\n                    <Button\n                        type=\"primary\"\n                        style={{float: \"right\",margin: '16px 0'}}\n                        onClick={publish}>Опубликовать изменения</Button>\n                    <div className=\"site-layout-background\" style={{padding: 24, minHeight: 360}}>\n                        {children}\n                    </div>\n                </Content>\n                <Footer style={{textAlign: 'center'}}>Живая классика ©2020 Created by Posline Team</Footer>\n            </Layout>\n        </Layout>\n    );\n}\n\nexport default CustomLayout;","import mainStore from \"../stores/mainStore\";\nimport React, {useEffect, useState} from \"react\";\nimport {observer} from \"mobx-react\";\nimport {Table, Tag, Space, Button, Modal, Form, Input, Select} from 'antd';\nimport {Link, useHistory} from \"react-router-dom\";\nimport {CheckCircleTwoTone, PlusOutlined, WarningTwoTone} from \"@ant-design/icons\";\n\nconst { confirm } = Modal;\n\nconst colors = {\n    demography: 'green',\n    domain: 'geekblue',\n    user_variant: 'volcano',\n    subdomain: 'blue'\n}\n\nconst columns = [\n    {\n        title: 'Идентификатор',\n        dataIndex: 'title',\n        key: 'title',\n        render: title => <Link to={`/steps/${title}/`}>{title}</Link>\n    },\n    {\n        title: 'Текст',\n        dataIndex: 'body',\n        key: 'body.title',\n        render: body => body.title.slice(0, 40) + '...',\n    },\n    {\n        title: 'Теги',\n        key: 'body.stats',\n        dataIndex: 'body',\n        render: body => {\n            const stats = body.stats || [];\n\n            return stats.map((tag, index) => {\n                let color = colors[tag]||'geekblue'\n\n\n                if (tag === 'loser') {\n                    color = 'volcano';\n                }\n                return (\n                    <Tag color={color} key={`${tag}-${index}`}>\n                        {tag}\n                    </Tag>\n                );\n            })\n        },\n    },\n\n    {\n        title: 'Инструменты',\n        key: 'actions',\n        dataIndex: 'title',\n\n        render: (title) => <Space size=\"middle\">\n            <a onClick={()=>{\n                const steps = mainStore.checkDelStep(title)\n                const icon = steps.length\n                    ? <WarningTwoTone twoToneColor=\"#fd0404\"/>\n                    : <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                const content = steps.length\n                    ? `Этот шаг содержится в ${steps.join(', ')}`\n                    : 'Этот шаг нигде не используется'\n\n                confirm({\n                    title: 'Подтвердите удаление шага',\n                    icon,\n                    content,\n                    okText: 'Удалить',\n                    okType: steps.length?'danger':'default',\n                    cancelText: 'Отмена',\n                    onOk() {\n                        mainStore.deleteStep(title)\n                    },\n                    onCancel() {\n                        console.log('Cancel');\n                    },\n                })\n            }}>Удалить</a>\n        </Space>,\n    }\n];\n\nconst Steps = () => {\n    const [visible, setVisible] = useState(false);\n    const history = useHistory()\n    const [form] = Form.useForm();\n\n    useEffect(() => {\n        if (!mainStore.steps.length)\n            mainStore.getDraft()\n    }, [])\n\n    const onOk = () => {\n        form.submit()\n    }\n    const createStep = (values) => {\n        mainStore.addStep(values)\n        history.replace(`/steps/${values.title}`)\n    }\n    const validateTitle = (rule, value) => {\n        if (mainStore.steps.find(s => s.title === value)) {\n            return Promise.reject('Шаг с таким идентификатором уже есть');\n        }\n        if (value.match(/[^A-Za-z0-9_]/)) {\n            return Promise.reject('Может содержать только английские символы и цифры');\n        }\n        return Promise.resolve();\n    }\n\n\n    return (\n        <div>\n            {/*{JSON.stringify(mainStore.steps[1])}*/}\n            <Table\n                columns={columns}\n                dataSource={mainStore.steps}\n                pagination={{defaultPageSize: 10, showSizeChanger: false, position: ['bottomCenter']}}\n                loading={!mainStore.steps.length}\n                footer={()=>(\n                    <Button\n                        htmlType=\"button\"\n                        style={{ width: '100%', height: 56 }}\n                        type=\"dashed\"\n                        icon={<PlusOutlined />}\n                        onClick={setVisible.bind(null,true)}>\n                        Добавить шаг\n                    </Button>\n                )}\n            />\n            {/*<Button htmlType=\"button\" style={{ margin: '0 8px' }} onClick={setVisible.bind(null,true)}>*/}\n            {/*    Добавить шаг*/}\n            {/*</Button>*/}\n\n            <Modal\n                title=\"Добавить шаг\"\n                visible={visible}\n                onOk={onOk}\n                onCancel={setVisible.bind(null,false)}\n                okText=\"Добавить\"\n                cancelText=\"Отмена\"\n            >\n                <Form form={form} layout=\"vertical\" name=\"userForm\" onFinish={createStep}>\n                    <Form.Item\n                        name={['title']}\n                        label=\"Идентификатор\"\n                        rules={[{ required: true, message: 'Идентификатор не может быть пустым' }, {validator: validateTitle}]}>\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Тип\"\n                        name={['body','type']}\n                        rules={[{ required: true, message: 'Тип не может быть пустым' }]}\n                    >\n                        <Select>\n                            <Select.Option value=\"general\">general</Select.Option>\n                            <Select.Option value=\"info\">info</Select.Option>\n                            <Select.Option value=\"items\">items</Select.Option>\n                            <Select.Option value=\"domainSelection\">domainSelection</Select.Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Заголовок\"\n                        name={['body','title']}\n                    >\n                        <Input.TextArea />\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </div>\n    )\n}\n\nexport default observer(Steps);","import mainStore from \"../stores/mainStore\";\nimport React, {useEffect, useState} from \"react\";\nimport {observer} from \"mobx-react\";\nimport {Table, Input, Modal, Form, Button, Space} from 'antd';\nimport {Link, useHistory} from \"react-router-dom\";\nimport {CheckCircleTwoTone, PlusOutlined, WarningTwoTone} from \"@ant-design/icons\";\nconst { confirm } = Modal;\n\nconst columns = [\n    {\n        title: 'Идентификатор',\n        dataIndex: 'title',\n        key: 'title',\n        render: title => <Link to={`/results/${title}/`}>{title}</Link>,\n    },\n    {\n        title: 'Текст',\n        dataIndex: 'body',\n        key: 'body.description',\n        render: body => body.description.slice(0, 40) + '...',\n    },\n    {\n        title: 'Книги',\n        key: 'body.books',\n        dataIndex: 'body',\n        render: body => {\n            const books = body.books || [];\n\n            return books.map(book => book.name).join(',')\n        },\n    },\n\n    // <p>Этот результат содержится в\n    //     {steps.map(title => <a onClick={()=>history.replace(`/steps/${title}`)}>&nbsp;{title}</a>)}\n    // </p>\n    {\n        title: 'Инструменты',\n        key: 'actions',\n        dataIndex: 'title',\n        render: (title) => <Space size=\"middle\">\n            <a onClick={()=>{\n                const steps = mainStore.checkDelResults(title)\n                const icon = steps.length\n                    ? <WarningTwoTone twoToneColor=\"#fd0404\"/>\n                    : <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                const content = steps.length\n                    ? `Этот результат содержится в ${steps.join(', ')}`\n                    : 'Этот результат нигде не используется'\n\n                confirm({\n                    title: 'Подтвердите удаление результата',\n                    icon,\n                    content,\n                    okText: 'Удалить',\n                    okType: steps.length?'danger':'default',\n                    cancelText: 'Отмена',\n                    onOk() {\n                        mainStore.deleteResult(title)\n                    },\n                    onCancel() {\n                        console.log('Cancel');\n                    },\n                })\n            }}>Удалить</a>\n        </Space>,\n    }\n];\n\nconst Results = () => {\n    const [visible, setVisible] = useState(false);\n    const history = useHistory()\n    const [form] = Form.useForm();\n\n    useEffect(() => {\n        if (!mainStore.results.length)\n            mainStore.getDraft()\n\n    }, [])\n\n\n    const onOk = () => {\n        form.submit()\n    }\n    const createStep = (values) => {\n        mainStore.addResult({title: values.title, body:{...values.body, books: [{quotes: ['Цитата'], annotations:['Аннотация']}]}})\n        history.replace(`/results/${values.title}`)\n    }\n    const validateTitle = (rule, value) => {\n        if (!value)\n            return Promise.reject();\n        if (mainStore.results.find(s => s.title === value)) {\n            return Promise.reject('Шаг с таким идентификатором уже есть');\n        }\n        if (value.match(/[^A-Za-z0-9_]/)) {\n            return Promise.reject('Может содержать только английские символы и цифры');\n        }\n        return Promise.resolve();\n    }\n\n    return (\n        <div>\n            {/*{JSON.stringify(mainStore.results[1])}*/}\n            <Table\n                columns={columns}\n                dataSource={mainStore.results}\n                pagination={{defaultPageSize: 10, showSizeChanger: false, position: ['bottomCenter']}}\n                loading={!mainStore.results.length}\n                footer={() => (\n                    <Button\n                        htmlType=\"button\"\n                        style={{width: '100%', height: 56}}\n                        type=\"dashed\"\n                        icon={<PlusOutlined/>}\n                        onClick={setVisible.bind(null, true)}>\n                        Добавить результат\n                    </Button>\n                )}\n            />\n            {/*<Pagination size=\"small\" total={50} ref={ref}/>*/}\n\n            {/*<Button htmlType=\"button\" style={{margin: '0 8px'}} onClick={setVisible.bind(null, true)}>*/}\n            {/*    Добавить результат*/}\n            {/*</Button>*/}\n\n            <Modal\n                title=\"Добавить результат\"\n                visible={visible}\n                onOk={onOk}\n                onCancel={setVisible.bind(null, false)}\n                okText=\"Добавить\"\n                cancelText=\"Отмена\"\n            >\n                <Form form={form} layout=\"vertical\" name=\"userForm\" onFinish={createStep}>\n                    <Form.Item\n                        name={['title']}\n                        label=\"Идентификатор\"\n                        rules={[{\n                            required: true,\n                            message: 'Идентификатор не может быть пустым'\n                        }, {validator: validateTitle}]}>\n                        <Input/>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Заголовок\"\n                        name={['body', 'header']}\n                        rules={[{required: true, message: 'Заголовок не может быть пустым'}]}\n                    >\n                        <Input/>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Описание\"\n                        name={['body', 'description']}\n                        rules={[{required: true, message: 'Описание не может быть пустым'}]}\n                    >\n                        <Input.TextArea/>\n                    </Form.Item>\n                </Form>\n            </Modal>\n\n        </div>\n    )\n}\n\nexport default observer(Results);","import React from \"react\";\nimport {Result, Button, Popover, Dropdown, Menu} from \"antd\";\nimport api from '../stores/api'\nimport authStore from \"../stores/authStore\";\n\nconst format = (date = new Date()) => {\n    return date.toISOString().slice(0,10)\n}\n\n// http://main.localhost/analysis/daily_report.xlsx\n// http://main.localhost/analysis/weekly_report.xlsx\n// http://main.localhost/analysis/monthly_report.xlsx\n// http://main.localhost/analysis/open_answers.xlsx\n\nconst Statistic = () => {\n    const download = (data, name) => {\n        const blob = new Blob([data], { type: 'application/vnd.ms-excel' });\n        const downloadUrl = URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href = downloadUrl;\n        a.download = name;\n        document.body.appendChild(a);\n        a.click();\n    }\n\n    const getLikesStatistic = async (days=7) => {\n        if(!days)\n            return getAllLikesStatistic();\n        const date = new Date();\n        const pastDate = date.getDate() - days;\n        date.setDate(pastDate);\n        const from = format(date)\n        const to = format(new Date())\n        const response = await api.get(`/api/sys/statistics/report/from/${from}/to/${to}/`,{\n            headers: {\"x-api-key\": authStore.apikey},\n            responseType: 'blob'\n        })\n        const name = `статистика_c_${from}_по_${to}.xlsx`\n        download(response.data, name)\n    }\n\n    const getAllLikesStatistic = async () => {\n        const from = format(new Date('2020-12-01'))\n        const to = format(new Date())\n        const response = await api.get(`/api/sys/statistics/report/from/${from}/to/${to}/`,{\n            headers: {\"x-api-key\": authStore.apikey},\n            responseType: 'blob'\n        })\n        const name = `вся_статистика.xlsx`\n        download(response.data, name)\n    }\n\n    const getDailyRepo = async () => {\n        const response = await api.get(`/analysis/daily_report.xlsx`,{\n            headers: {'Authorization': 'Basic YWRtaW46MG5taVA4YVU='},\n            responseType: 'blob',\n        })\n        download(response.data, 'daily_report.xlsx')\n    }\n\n    const getWeeklyRepo = async () => {\n        const response = await api.get(`/analysis/weekly_report.xlsx`,{\n            headers: {'Authorization': 'Basic a3VkZXA6MTIz'},\n            responseType: 'blob',\n        })\n        download(response.data, 'weekly_report.xlsx')\n    }\n\n    const getMonthlyRepo = async () => {\n        const response = await api.get(`/analysis/monthly_report.xlsx`,{\n            headers: {'Authorization': 'Basic a3VkZXA6MTIz'},\n            responseType: 'blob',\n        })\n        download(response.data, 'monthly_report.xlsx')\n    }\n\n    const getAnswersRepo = async () => {\n        const response = await api.get(`/analysis/open_answers.xlsx`,{\n            headers: {'Authorization': 'Basic a3VkZXA6MTIz'},\n            responseType: 'blob',\n        })\n        download(response.data, 'open_answers.xlsx')\n    }\n\n    const menu = (\n        <Menu onClick={({key}) => getLikesStatistic(parseInt(key))}>\n            <Menu.Item key={1}>\n                За день\n            </Menu.Item>\n            <Menu.Item key={7}>\n                За неделю\n            </Menu.Item>\n            <Menu.Item key={30}>\n                За месяц\n            </Menu.Item>\n            <Menu.Item key={0}>\n                За все время\n            </Menu.Item>\n        </Menu>\n    );\n\n\n    return <div className=\"Statistic\">\n        <div className=\"Statistic-section\">\n            <h2>Общая статистика</h2>\n            <Button onClick={getDailyRepo}>Ежедневный отчет</Button>\n            <Button onClick={getWeeklyRepo}>Еженедельный отчет</Button>\n            <Button onClick={getMonthlyRepo}>Ежемесячный отчет</Button>\n        </div>\n\n        <div className=\"Statistic-section\">\n            <h2>Дополнительная статистика</h2>\n            <Dropdown overlay={menu}>\n                <Button>Статистика по лайкам и комментариям</Button>\n            </Dropdown>\n\n            <Button onClick={getAnswersRepo}>Отчет по открытым ответам</Button>\n        </div>\n\n    </div>\n}\n\nexport default Statistic;","import React from \"react\";\nimport { Form, Input, Button, Checkbox, notification } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport authStore from \"../stores/authStore\";\n\n\nconst Login = () => {\n    const onFinish = async values => {\n        const res = await authStore.getApiKey(values)\n        if(res.status === 'err')\n            notification.error(res)\n\n    };\n\n    return (\n        <Form\n            name=\"normal_login\"\n            className=\"login-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n        >\n            <Form.Item>\n                <h1>Панель администратора</h1>\n            </Form.Item>\n            <Form.Item\n                name=\"login\"\n                rules={[{ required: true, message: 'Пожалуйста, введите логин' }]}\n            >\n                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Логин\" />\n            </Form.Item>\n            <Form.Item\n                name=\"password\"\n                rules={[{ required: true, message: 'Пожалуйста, введите пароль' }]}\n            >\n                <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Пароль\"\n                />\n            </Form.Item>\n\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                    Войти\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default Login;","import {Tooltip, Checkbox, Form, Input, Select, Button} from \"antd\";\nimport React, {useEffect, useRef, useState} from \"react\";\nimport {CloseOutlined, MinusCircleOutlined, PlusOutlined} from '@ant-design/icons';\n\nconst {Option} = Select;\n\nconst StepElementOption = ({option, results, steps, remove, index}) => {\n    const [userVariant, setUserVariant] = useState(option.raw_text)\n    // const [userVariantRef, setUserVariant] = useRef()\n\n\n    const userCheck = (e,a,b) => {\n        setUserVariant(e.target.checked)\n    }\n\n    return (\n        <Form.Item className=\"StepOption\">\n            <Form.Item style={{width: '90%', display: 'inline-block'}}>\n                <Form.Item\n                    label=\"Текст\"\n                    style={{paddingRight: 12, width: '40%', display: 'inline-block'}}\n                    name={['placeholders',index[0],'items',index[1], 'label']}\n                    rules={[{ required: true, message: 'Введите текст!' }]}\n                    initialValue={option.label}\n                >\n                    <Input.TextArea/>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Данные\"\n                    style={{paddingRight: 12, width: '40%', display: 'inline-block'}}\n                    name={['placeholders',index[0],'items',index[1],'value', 'data']}\n                    initialValue={option.value.data}\n                    rules={[{ required: !userVariant, message: 'Введите текст!' }]}\n                >\n                    <Select\n                        mode=\"tags\"\n                        placeholder=\"Данные варианта\"\n                        disabled={userVariant}/>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Пользовательский ввод\"\n                    style={{paddingRight: 12, width: '20%', display: 'inline-block'}}\n                    name={['placeholders',index[0],'items',index[1],'raw_text']}\n                    valuePropName=\"checked\"\n                    initialValue={option.raw_text}\n                >\n                    <Select defaultValue={!!option.raw_text} onSelect={e => setUserVariant(e)}>\n                        <Option value={false}>Разрешить</Option>\n                        <Option value={true}>Запретить</Option>\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Связанные результаты\"\n                    style={{paddingRight: 12, width: '50%', display: 'inline-block'}}\n                    name={['placeholders',index[0],'items',index[1],'value', 'to_results']}\n                    initialValue={option.value.to_results}\n                >\n                    <Select mode=\"tags\" style={{width: '100%'}} placeholder=\"Выберите результаты\">\n                        {results.map(result => <Option key={`option-${result}`} value={result}>{result}</Option>)}\n                    </Select>\n                </Form.Item>\n\n\n                <Form.Item\n                    label=\"Следующие шаги\"\n                    style={{paddingRight: 12, width: '50%', display: 'inline-block'}}\n                    name={['placeholders',index[0],'items',index[1],'value', 'next_steps']}\n                    initialValue={option.value.next_steps}\n                >\n                    <Select mode=\"tags\" style={{width: '100%'}} placeholder=\"Выберите шаги\">\n                        {steps.map(step => <Option key={`option-${step}`} value={step}>{step}</Option>)}\n                    </Select>\n                </Form.Item>\n            </Form.Item>\n            <Form.Item style={{display: 'inline-block', width: '10%', textAlign: 'center', marginTop: 84}}>\n                <Tooltip title=\"Удалить вариант\">\n                    <Button danger shape=\"circle\" icon={<CloseOutlined />} onClick={remove}/>\n                </Tooltip>\n            </Form.Item>\n        </Form.Item>\n    )\n}\n\nexport default StepElementOption","import {Form, Button} from \"antd\";\nimport React, {useState} from \"react\";\nimport { CaretDownOutlined, CaretUpOutlined } from '@ant-design/icons';\n\nconst Section = ({children, label, initialHidden = false, hidable=true}) => {\n    const [hidden,setHidden] = useState(initialHidden)\n\n    return <Form.Item>\n        {/*<Form.Item*/}\n        {/*    style={{paddingRight: 0, display: 'inline-block',marginBottom: 4}}>*/}\n        {/*    <h4>{label}</h4>*/}\n        {/*</Form.Item>*/}\n        <Form.Item\n            style={{paddingRight: 12, display: 'inline-block',marginBottom: 4}}>\n            {hidable?\n                <Button\n                    type=\"text\"\n                    icon={hidden? <CaretUpOutlined/> : <CaretDownOutlined/>}\n                    size=\"small\"\n                    style={{display: 'inline-block'}}\n                    onClick={setHidden.bind(null, hidden => !hidden)}\n                ><b>{label}</b></Button>:<b>{label}</b>\n            }\n\n        </Form.Item>\n\n        <Form.Item hidden={hidden}>\n            {children}\n        </Form.Item>\n\n    </Form.Item>\n\n}\n\nexport default Section;","import {Checkbox, Button, Form, Input, Select, InputNumber} from \"antd\";\nimport React, {useEffect, useState} from \"react\";\nimport \"./StepElementsList.css\";\nimport {CaretDownOutlined, CaretUpOutlined, MinusCircleOutlined, PlusOutlined} from '@ant-design/icons';\nimport StepElementOption from \"./StepElementOption\";\nimport Section from \"./Section\";\n\nconst {Option} = Select;\n\nconst TaggingElements = ({element, results = ['lol', 'kek'], steps = ['lol', 'kek'], index, type, onRemove}) => {\n\n    const [options, setOptions] = useState([...element.items]);\n    const [hidden, setHidden] = useState(false);\n\n    const add = () => {\n        setOptions([...options, {\n            label: 'Новый вариант',\n            value: {\n                data: [],\n                to_results: [],\n                next_steps: []\n            }\n        }])\n\n\n    }\n\n    const remove = (id) => {\n        options[id] = null;\n        setOptions([...options])\n    }\n\n    return (\n        <Form.Item className=\"StepElement\">\n            <Form.Item style={{marginBottom: 0}}>\n                <Form.Item\n                    label=\"Тип элемента\"\n                    name={['placeholders', index, 'name']}\n                    style={{display: \"inline-block\", width: \"calc(40% - 4px)\", paddingRight: 12}}\n                >\n                    <h3>{type === 'tagging_one' ? 'Одиночный выбор' : 'Множественный выбор'}</h3>\n                </Form.Item>\n\n                <Form.Item style={{paddingRight: 12, float: 'right'}}\n                           label=\"Инструменты\">\n                    <Button\n                        icon={hidden ? <CaretUpOutlined/> : <CaretDownOutlined/>}\n                        onClick={setHidden.bind(null, hidden => !hidden)}\n                        style={{display: 'inline-block', marginRight: 12, width: 140}}\n                    >{hidden ? \"Развернуть\" : \"Свернуть\"}</Button>\n                    <Button danger onClick={onRemove} style={{display: 'inline-block'}}>Удалить элемент</Button>\n                </Form.Item>\n            </Form.Item>\n\n\n            <Form.Item hidden={hidden}>\n                <Section label=\"Основные настройки\" hidable={false}>\n                    <Form.Item\n                        name={['placeholders', index, 'name']}\n                        label=\"Название\"\n                        rules={[{required: true, whitespace: true, message: \"Введите название шага\",}]}\n                        initialValue={element.name}\n                        style={{paddingRight: 12, display: 'inline-block', width: '20%'}}>\n                        <Input/>\n                    </Form.Item>\n                    <Form.Item style={{paddingRight: 12, display: 'inline-block', width: '50%'}}\n                               name={['placeholders', index, 'keys']} label=\"Ключи\" required\n                               initialValue={element.keys}>\n                        <Select mode=\"tags\" style={{width: '100%'}}>\n                            <Option value=\"type\">type</Option>\n                            <Option value=\"name\">name</Option>\n                            <Option value=\"value\">value</Option>\n                            <Option value=\"label\">label</Option>\n                            <Option value=\"raw_text\">raw_text</Option>\n                            <Option value=\"index\">index</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item style={{paddingRight: 12, display: 'inline-block', width: '20%', visibility: \"hidden\"}}\n                               name={['placeholders', index, 'type']} label=\"Тип\"\n                               required\n                               initialValue={element.type}\n                    >\n                        <Input/>\n                    </Form.Item>\n                </Section>\n\n                <Section label=\"Дополнительные настройки\" initialHidden={true}>\n                    <Form.Item style={{ paddingRight: 12, width: '40%', display: type === 'tagging_one' ? 'none' : 'inline-block' }}\n                               name={['placeholders', index, 'gui_options', 'minSelected']}\n                               label=\"Минимальное кол-во выборов\"\n                               initialValue={element.gui_options && element.gui_options.minSelected}\n                    >\n                        <InputNumber style={{width: '100%'}} min={0}/>\n                    </Form.Item>\n                    <Form.Item style={{ paddingRight: 12, width: '40%', display: type === 'tagging_one' ? 'none' : 'inline-block' }}\n                               name={['placeholders', index, 'gui_options', 'maxSelected']}\n                               label=\"Максимальное кол-во выборов\"\n                               initialValue={element.gui_options && element.gui_options.maxSelected}\n                    >\n                        <InputNumber style={{width: '100%'}} min={0}/>\n                    </Form.Item>\n\n                    <Form.Item style={{paddingRight: 12, display: 'inline-block', width: '40%'}}\n                               name={['placeholders', index, 'gui_options', 'statistics_params']}\n                               label=\"Параметры для статистики\"\n                               initialValue={element.gui_options && element.gui_options.statistics_params}>\n                        <Select mode=\"tags\" style={{width: '100%'}} placeholder=\"Введите свой параметр или выберите готовый\">\n                            <Option value=\"sex\">sex</Option>\n                        </Select>\n                    </Form.Item>\n\n                    <Form.Item style={{paddingRight: 12, display: type === 'tagging_one' ? 'none' : 'inline-block', width: '60%'}}\n                               name={['placeholders', index, 'gui_options', 'ignoreOnlyRawText']}\n                               label=\"Выбор только пользовательского ввода\"\n                               initialValue={element.gui_options && element.gui_options.ignoreOnlyRawText}\n                    >\n                        <Select defaultValue={!!(element.gui_options && element.gui_options.ignoreOnlyRawText)}>\n                            <Option value={false}>Разрешить</Option>\n                            <Option value={true}>Запретить</Option>\n                        </Select>\n                    </Form.Item>\n                </Section>\n\n\n                <Section label=\"Варианты\" initialHidden={true}>\n                    {options.map((option, i) => !option ? '' : <StepElementOption\n                        index={[index, i]}\n                        key={`option-${Math.random() * 1000}-${i}`}\n                        option={option}\n                        steps={steps}\n                        results={results}\n                        remove={remove.bind(null, i)}/>)}\n\n\n                    <Form.Item>\n                        <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined/>} style={{height: 40}}>\n                            Добавить вариант\n                        </Button>\n                    </Form.Item>\n                </Section>\n            </Form.Item>\n        </Form.Item>\n    )\n};\n\nexport default TaggingElements","import {Checkbox, Button, Form, Input, Select, InputNumber} from \"antd\";\nimport React, { useState} from \"react\";\nimport \"./StepElementsList.css\";\nimport {CaretDownOutlined, CaretUpOutlined} from \"@ant-design/icons\";\nimport Section from \"./Section\";\n\nconst {Option} = Select\n\nconst RawText = ({index, element = {}, onRemove}) => {\n    const [isNumber, setIsNumber] = useState(!!element.gui_options);\n    const [hidden, setHidden] = useState(false);\n\n\n    return (\n        <Form.Item className=\"StepElement\">\n\n            <Form.Item style={{marginBottom: 0}}>\n                <Form.Item\n                    label=\"Тип элемента\"\n                    name={['placeholders', index, 'name']}\n                    style={{display: \"inline-block\", width: \"calc(40% - 4px)\", paddingRight: 12}}\n                >\n                    <h3>Пользовательский ввод</h3>\n                </Form.Item>\n\n                <Form.Item style={{paddingRight: 12, float: 'right'}} label=\"Инструменты\">\n                    <Button\n                        icon={hidden ? <CaretUpOutlined/> : <CaretDownOutlined/>}\n                        onClick={setHidden.bind(null, hidden => !hidden)}\n                        style={{display: 'inline-block', marginRight: 12, width: 140}}\n                    >{hidden ? \"Развернуть\" : \"Свернуть\"}</Button>\n                    <Button danger onClick={onRemove} style={{display: 'inline-block'}}>Удалить элемент</Button>\n                </Form.Item>\n            </Form.Item>\n\n            {/*<Form.Item>*/}\n            {/*    <Form.Item style={{paddingRight: 12, display: 'inline-block'}}>*/}\n            {/*        <h3>Пользовательский ввод</h3>*/}\n            {/*    </Form.Item>*/}\n            {/*    <Form.Item style={{paddingRight: 12, float: 'right'}}>*/}\n            {/*        <Button danger onClick={onRemove}>Удалить элемент</Button>*/}\n            {/*    </Form.Item>*/}\n            {/*</Form.Item>*/}\n\n\n            <Form.Item hidden={hidden}>\n                <Section label=\"Основные настройки\" hidable={false}>\n                    <Form.Item\n                        name={['placeholders', index, 'name']}\n                        label=\"Название\"\n                        required\n                        initialValue={element.name}\n                        style={{paddingRight: 12, display: 'inline-block', width: '20%'}}>\n                        <Input/>\n                    </Form.Item>\n                    <Form.Item style={{paddingRight: 12, display: 'inline-block', width: '50%'}}\n                               name={['placeholders', index, 'keys']} label=\"Ключи\" required\n                               initialValue={element.keys}>\n                        <Select mode=\"tags\" style={{width: '100%'}}>\n                            <Option value=\"type\">type</Option>\n                            <Option value=\"name\">name</Option>\n                            <Option value=\"value\">value</Option>\n                            <Option value=\"label\">label</Option>\n                            <Option value=\"raw_text\">raw_text</Option>\n                            <Option value=\"index\">index</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        style={{paddingRight: 12, display: 'inline-block', width: '20%', visibility: \"hidden\"}}\n                        name={['placeholders', index, 'type']} label=\"Тип\"\n                        required\n                        initialValue={element.type}\n                    >\n                        <Input/>\n                    </Form.Item>\n\n                    <Form.Item style={{marginBottom: 0}}>\n                        <Form.Item\n                            label=\"Вопрос\"\n                            initialValue={element.label}\n                            name={['placeholders', index, 'label']}\n                            style={{marginBottom: 0, paddingRight: 12, display: 'inline-block', width: '40%'}}>\n                            <Input.TextArea autoSize={{minRows: 9}}/>\n                        </Form.Item>\n\n                        <Form.Item\n                            style={{marginBottom: 0, display: 'inline-block', width: '50%'}}>\n\n                            <Form.Item\n                                label=\"Тип поля\"\n                                style={{paddingBottom: 0, display: 'inline-block', width: '100%'}}>\n                                {/*<Checkbox checked={isNumber} onClick={setIsNumber.bind(null, !isNumber)}>Является числовое*/}\n                                {/*    полем</Checkbox>*/}\n\n                                <Select value={isNumber} onSelect={e => setIsNumber(e)}>\n                                    <Option value={false}>Строка</Option>\n                                    <Option value={true}>Число</Option>\n                                </Select>\n\n                            </Form.Item>\n                            <Form.Item style={{display: isNumber ? 'block' : 'none'}}>\n                                <Form.Item\n                                    label=\"Минимальное значение\"\n                                    name={['placeholders', index, 'gui_options', 'min']}\n                                    initialValue={element.gui_options && element.gui_options.min}\n                                    style={{marginBottom: 0, display: 'inline-block', width: '50%', paddingRight: 12}}>\n                                    <InputNumber style={{width: '100%'}}/>\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Максимальное значение\"\n                                    name={['placeholders', index, 'gui_options', 'max']}\n                                    initialValue={element.gui_options && element.gui_options.max}\n                                    style={{marginBottom: 0, display: 'inline-block', width: '50%'}}>\n                                    <InputNumber style={{width: '100%'}}/>\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Сообщение при ошибке\"\n                                    name={['placeholders', index, 'gui_options', 'error_message']}\n                                    initialValue={element.gui_options && element.gui_options.error_message}\n                                    style={{marginBottom: 0, display: 'inline-block', width: '100%'}}>\n                                    <Input.TextArea autoSize/>\n                                </Form.Item>\n                            </Form.Item>\n\n                        </Form.Item>\n                    </Form.Item>\n                </Section>\n            </Form.Item>\n\n\n        </Form.Item>\n    )\n};\n\nexport default RawText","import {Button, Form, Menu, Dropdown} from \"antd\";\nimport React, {useState} from \"react\";\nimport \"./StepElementsList.css\";\nimport TaggingElements from \"./TaggingElements\";\nimport {PlusOutlined} from \"@ant-design/icons\";\nimport RawText from \"./RawText\";\n\nconst StepElementsList = ({defaultValue = [], results, steps, hidden}) => {\n    const [elements,setElements] = useState(defaultValue);\n\n    const onRemove = (id) => {\n        elements[id] = null;\n        setElements([...elements])\n    }\n\n    const addElement = ({key}) => {\n        if(key==='raw_text')\n            setElements([...elements, {\n                name: 'answer',\n                keys:[\"type\", \"name\", \"value\", \"label\", \"raw_text\", \"index\"],\n                type: key}])\n        else\n            setElements([...elements, {\n                name: 'answer',\n                keys:[\"type\", \"name\", \"value\", \"label\", \"raw_text\", \"index\"],\n                type: key,\n                items: []\n            }])\n    }\n\n    const menu = (\n        <Menu onClick={addElement}>\n            <Menu.Item key=\"tagging_one\">\n                Одиночный выбор\n            </Menu.Item>\n            <Menu.Item key=\"tagging_many\">\n                Множественный выбор\n            </Menu.Item>\n            <Menu.Item key=\"raw_text\">\n                Пользовательский ввод\n            </Menu.Item>\n        </Menu>\n    );\n\n\n\n    return(\n        <Form.Item style={{marginTop: 40}} hidden={hidden}>\n            <Form.Item style={{marginBottom: 0}}>\n                <Form.Item style={{paddingRight: 12, display: 'inline-block'}}>\n                    <h2>Элементы</h2>\n                </Form.Item>\n                <Form.Item style={{paddingRight: 12, float: 'right'}}>\n                    <Dropdown overlay={menu} placement=\"bottomCenter\">\n                        <Button type=\"primary\" icon={<PlusOutlined />}>Добавить элемент</Button>\n                    </Dropdown>\n                </Form.Item>\n            </Form.Item>\n\n            {elements.filter(e => !!e).length\n                ? elements.map((element, index) => {\n                    if(!element)\n                        return ''\n                    if(element.type === 'tagging_one' || element.type === 'tagging_many')\n                        return <TaggingElements\n                            type={element.type}\n                            index={index}\n                            key={`TaggingOneElement-${index}`}\n                            element={element}\n                            results={results}\n                            steps={steps}\n                            onRemove={onRemove.bind(null,index)}\n                        />\n                    if(element.type === 'raw_text')\n                        return <RawText\n                            element={element}\n                            index={index}\n                            key={`RawText-${index}`}\n                            onRemove={onRemove.bind(null,index)}\n                        />\n                    return '-'\n                })\n                : <Form.Item style={{marginBottom: 0, paddingTop: 8, paddingBottom: 8, textAlign: 'center'}} className=\"StepElement\">\n                    <h4>Элементы отсутствуют</h4>\n                  </Form.Item>\n            }\n\n        </Form.Item>\n    )\n};\n\nexport default StepElementsList","import React from \"react\";\nimport {Spin, Alert, Form, Select, Input, Button} from \"antd\";\nimport mainStore from \"../stores/mainStore\";\nimport StepElementsList from \"./StepElementsList\";\n\nconst {Option} = Select;\n\nconst LoadingStep = () => {\n    return (\n            <Spin>\n                <Form\n                    layout=\"vertical\"\n                >\n                    <Form.Item>\n                        <Form.Item style={{marginBottom: 0}}>\n                            <h2>Основная информация</h2>\n                        </Form.Item>\n                        <Form.Item style={{marginBottom: 0}}>\n                            <Form.Item\n                                label=\"Тип\"\n                                name=\"type\"\n                                style={{paddingRight: 12, width: '20%', display: 'inline-block'}}\n                                // initialValue={step.body.type}\n                            >\n                                <Select>\n                                    <Option value=\"general\">general</Option>\n                                    <Option value=\"info\">info</Option>\n                                    <Option value=\"items\">items</Option>\n                                    <Option value=\"domainSelection\">domainSelection</Option>\n                                    <Option value=\"result\">result</Option>\n                                </Select>\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"Теги\"\n                                style={{paddingRight: 12, width: '40%', display: 'inline-block'}}\n                                name=\"stats\"\n                            >\n                                <Select mode=\"tags\" style={{width: '100%'}} placeholder=\"Выберите теги\">\n                                    <Option value=\"demography\">demography</Option>\n                                    <Option value=\"domain\">domain</Option>\n                                    <Option value=\"subdomain\">subdomain</Option>\n                                    <Option value=\"user_variant\">user_variant</Option>\n                                </Select>\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"Следующие шаги\"\n                                style={{paddingRight: 12, width: '40%', display: 'inline-block'}}\n                                name=\"next_steps\"\n                            >\n                                <Select mode=\"tags\" placeholder=\"Выберите шаги\" >\n                                    <Option  value={'step.title'}>Шаг</Option>\n                                </Select>\n                            </Form.Item>\n                        </Form.Item>\n                        <Form.Item style={{marginBottom: 0}}>\n                            <Form.Item\n                                label=\"Заголовок\"\n                                style={{paddingRight: 12, width: '40%', display: 'inline-block'}}\n                                name=\"title\"\n                            >\n                                <Input.TextArea />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"Текст\"\n                                style={{paddingRight: 12, width: '60%', display: 'inline-block'}}\n                                name=\"body\"\n                                // initialValue={typeof step.body.body === 'string' ? step.body.body : ''}\n                            >\n                                <Input.TextArea />\n                            </Form.Item>\n                        </Form.Item>\n                    </Form.Item>\n\n                    <Form.Item style={{marginBottom: 8, paddingTop: 8, paddingBottom: 8, textAlign: 'center'}} className=\"StepElement\">\n                        <h4>Элементы отсутствуют</h4>\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" style={{float: \"right\"}}>Сохранить</Button>\n                    </Form.Item>\n                </Form>\n            </Spin>\n    )\n}\n\nexport default LoadingStep","import mainStore from \"../stores/mainStore\";\nimport React, {useEffect, useRef, useState} from \"react\";\nimport {observer} from \"mobx-react\";\nimport {useHistory, useParams} from \"react-router\";\nimport {Form, Input, Select, Tooltip, Button, Radio, Modal, notification} from 'antd';\nimport StepElementsList from \"../components/StepElementsList\";\nimport LoadingStep from \"../components/LoadingStep\";\nconst pickBy = require('lodash/pickBy');\nconst isObject = require('lodash/isObject');\nconst isArray = require('lodash/isArray');\nconst mapValues = require('lodash/mapValues');\n\nconst YAML = require(\"yaml\");\n\nconst {Option} = Select;\n\nconst deepPick = (value) => {\n    if(isArray(value)){\n        if(value.length === 0)\n            return undefined\n        return value.map(v => deepPick(v))\n    }\n\n    if(isObject(value)){\n        const newValue = pickBy(mapValues(value, v => deepPick(v)))\n        if(Object.keys(newValue).length === 0)\n            return undefined\n\n        return newValue\n    }\n\n    return value\n}\n\n\nconst Step = () => {\n    const {title} = useParams()\n    const [step, setStep] = useState(mainStore.steps.find(step => step.title === title) || {body: {}})\n    const history = useHistory()\n\n    const [visible, setVisible] = useState(false)\n    const saveRef = useRef()\n    const [toSave, setToSave] = useState('')\n\n    useEffect(() => {\n        if (!mainStore.steps.length) {\n            mainStore.getDraft().then(() =>{\n                const step = mainStore.steps.find(step => step.title === title)\n                if(!step)\n                    history.replace('/error')\n                    setStep(step)\n            }\n\n            )\n        }\n    }, [])\n\n\n    const steps = mainStore.steps.map(step => step.title)\n    const results = mainStore.results.map(result => result.title)\n\n    if (!step.title)\n        return <LoadingStep/>\n\n\n    const onSave = async () => {\n        try{\n            setVisible(false)\n            await mainStore.setStep(step.title, YAML.parse(toSave))\n            notification.success({message: \"Изменения успешно сохранены\"})\n        }catch (e) {\n            notification.error({message: \"Произошла ошибка при сохранении изменений\"})\n        }\n    }\n\n\n    const onFinish = values => {\n        if(values.placeholders)\n        values.placeholders = values.placeholders.map(p => {\n            if(p.items)\n                p.items = p.items.filter(i => !!i).map(item => {\n                    if(item.raw_text)\n                        item.value.data = undefined\n                    return item\n                })\n            return p\n        })\n\n        console.log( {...step.body,...deepPick(values)})\n        const results = deepPick({...step.body,...values})\n\n        setToSave(YAML.stringify(results))\n        setVisible(true)\n    };\n\n    return (\n        <div>\n            <Form\n                layout=\"vertical\"\n                onFinish={onFinish}\n                initialValues={{...step.body, placeholders: undefined}}\n            >\n                <Form.Item>\n                    <Form.Item style={{marginBottom: 0}}>\n                        <h2>Основная информация</h2>\n                    </Form.Item>\n                    <Form.Item style={{marginBottom: 0}}>\n                        <Form.Item\n                            label=\"Тип\"\n                            name=\"type\"\n                            style={{paddingRight: 12, width: '20%', display: 'inline-block'}}\n                            // initialValue={step.body.type}\n                        >\n                            <Select>\n                                <Option value=\"general\">general</Option>\n                                <Option value=\"info\">info</Option>\n                                <Option value=\"items\">items</Option>\n                                <Option value=\"domainSelection\">domainSelection</Option>\n                                <Option value=\"result\">result</Option>\n                            </Select>\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Теги\"\n                            style={{paddingRight: 12, width: '40%', display: 'inline-block'}}\n                            name=\"stats\"\n                            // initialValue={step.body.stats}\n                        >\n                            <Select mode=\"tags\" style={{width: '100%'}} placeholder=\"Выберите теги\">\n                                <Option value=\"demography\">demography</Option>\n                                <Option value=\"domain\">domain</Option>\n                                <Option value=\"subdomain\">subdomain</Option>\n                                <Option value=\"user_variant\">user_variant</Option>\n                            </Select>\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Следующие шаги\"\n                            style={{paddingRight: 12, width: '40%', display: 'inline-block'}}\n                            name=\"next_steps\"\n                            // initialValue={step.body.next_steps}\n                        >\n                            <Select mode=\"tags\" placeholder=\"Выберите шаги\" >\n                                {mainStore.steps.map(step => <Option key={`option-${step.title}`} value={step.title}>{step.title}</Option>)}\n                            </Select>\n                        </Form.Item>\n                    </Form.Item>\n                    <Form.Item style={{marginBottom: 0}}>\n                        <Form.Item\n                            label=\"Заголовок\"\n                            style={{paddingRight: 12, width: '40%', display: 'inline-block'}}\n                            name=\"title\"\n                            // initialValue={step.body.title}\n                        >\n                            <Input.TextArea />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"Текст\"\n                            style={{paddingRight: 12, width: '60%', display: 'inline-block',\n                                visibility: step.body.type === 'info'?'hidden':'visible'}}\n                            hidden={step.body.type === 'info'}\n                            name=\"body\"\n                            // initialValue={typeof step.body.body === 'string' ? step.body.body : ''}\n                        >\n                            <Input.TextArea />\n                        </Form.Item>\n                    </Form.Item>\n                </Form.Item>\n\n                <StepElementsList defaultValue={step.body.placeholders} results={results} steps={steps}\n                                  hidden={step.body.type === 'info' || step.body.type === 'result'}/>\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" style={{float: \"right\"}}>Сохранить</Button>\n                </Form.Item>\n\n                <Form.Item name={['next_button']} hidden>\n                    <Input/>\n                </Form.Item>\n            </Form>\n\n\n            <Modal\n                title=\"Подтверждение изменений\"\n                visible={visible}\n                onOk={onSave}\n                okText=\"Сохранить\"\n                cancelText=\"Отмена\"\n                onCancel={setVisible.bind(null,false)}\n                width=\"50%\"\n            >\n               <Input.TextArea value={toSave} onChange={e => setToSave(e.target.value)} autoSize={{maxRows: 15}}/>\n            </Modal>\n\n        </div>\n    )\n}\n\nexport default observer(Step);","import React, {useState} from \"react\";\nimport {Form, Input, Select, Tooltip, Button, Radio, Modal, InputNumber} from 'antd';\nimport Section from \"./Section\";\nimport {\n    ArrowDownOutlined,\n    ArrowUpOutlined,\n    CaretDownOutlined,\n    CaretUpOutlined,\n    MinusCircleOutlined,\n    PlusOutlined\n} from '@ant-design/icons';\n\nconst Book = ({data, index, remove, move, booksCount}) => {\n    const [hidden, setHidden] = useState(false)\n\n\n    return (<Form.Item className=\"StepElement\">\n        {/*{index}{JSON.stringify(data)}*/}\n        <Form.Item style={{marginBottom: 0}}>\n            <Form.Item\n                label=\"Название\"\n                isListField={true}\n                name={[index, \"name\"]}\n                rules={[\n                    {\n                        required: true,\n                        whitespace: true,\n                        message: \"Введите название книги\",\n                    },\n                ]}\n                style={{display: \"inline-block\", width: \"calc(40% - 4px)\", paddingRight: 12}}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item style={{paddingRight: 12, float: 'right'}}\n                       label=\"Инструменты\">\n                <Button\n                    icon={<ArrowUpOutlined/>}\n                    onClick={() => move(data.name, data.name - 1)}\n                    style={{display: 'inline-block', marginRight: 12}}\n                    disabled={data.name === 0}\n                />\n                <Button\n                    icon={<ArrowDownOutlined/>}\n                    onClick={() => move(data.name, data.name + 1)}\n                    style={{display: 'inline-block', marginRight: 12}}\n                    disabled={data.name === booksCount - 1}\n                />\n                <Button\n                    icon={hidden ? <CaretUpOutlined/> : <CaretDownOutlined/>}\n                    onClick={setHidden.bind(null, hidden => !hidden)}\n                    style={{display: 'inline-block', marginRight: 12, width: 140}}\n                >{hidden ? \"Развернуть\" : \"Свернуть\"}</Button>\n                <Button danger onClick={remove} style={{display: 'inline-block'}}>Удалить книгу</Button>\n            </Form.Item>\n        </Form.Item>\n\n        <Form.Item hidden={hidden}>\n            <Section label=\"Основные настройки\" hidable={false}>\n\n                <Form.Item\n                    label=\"Автор\"\n                    isListField={true}\n                    name={[index, \"author\"]}\n                    rules={[\n                        {\n                            required: true,\n                            whitespace: true,\n                            message: \"Введите автора книги\",\n                        },\n                    ]}\n                    style={{display: \"inline-block\", width: \"calc(50% - 6px)\", paddingRight: 12}}\n                >\n                    <Input/>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Жанр\"\n                    isListField={true}\n                    name={[index, \"description\"]}\n                    rules={[\n                        {\n                            required: true,\n                            whitespace: true,\n                            message: \"Введите жанр книги\",\n                        },\n                    ]}\n                    style={{display: \"inline-block\", width: \"calc(50% - 6px)\"}}\n                >\n                    <Input/>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Ссылка на картинку\"\n                    isListField={true}\n                    name={[index, \"img_url\"]}\n                    rules={[\n                        {\n                            required: true,\n                            whitespace: true,\n                            message: \"Введите ссылку на картинку книги\",\n                        },\n                    ]}\n                    style={{display: \"inline-block\", width: \"calc(38% - 6px)\", paddingRight: 12}}\n                >\n                    <Input/>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Ссылка на книгу\"\n                    isListField={true}\n                    name={[index, \"store_url\"]}\n                    style={{display: \"inline-block\", width: \"calc(38% - 6px)\", paddingRight: 12}}\n                    initialValue={''}\n                >\n                    <Input/>\n                </Form.Item>\n                <Form.Item\n                    label=\"Возрастное ограничение\"\n                    isListField={true}\n                    rules={[\n                        {\n                            required: true,\n                            whitespace: true,\n                            message: \"Введите возрастное ограничение книги\",\n                        },\n                    ]}\n                    name={[index, \"age_limit\"]}\n                    style={{display: \"inline-block\", width: \"24%\"}}\n                >\n                    <Input/>\n                </Form.Item>\n                <Form.Item\n                    isListField={true}\n                    name={[index, \"eval\"]}\n                    initialValue={5}\n                    // style={{display: \"inline-block\", width: 0}}\n\n                    hidden={true}\n                >\n                    <InputNumber/>\n                </Form.Item>\n            </Section>\n\n            <Section label=\"Цитаты\">\n                <Form.List isListField={true} name={[index, \"quotes\"]}>\n                    {(fields, {add, remove}) => (<>\n                        {fields.map((field, index) => (\n                            <Form.Item\n                                required={false}\n                                key={field.key}\n                            >\n                                <Form.Item\n                                    {...field}\n                                    validateTrigger={['onChange', 'onBlur']}\n                                    rules={[\n                                        {\n                                            required: true,\n                                            whitespace: true,\n                                            message: \"Введите цитату из книги\",\n                                        },\n                                    ]}\n                                    noStyle\n                                >\n                                    <Input.TextArea autoSize placeholder=\"Цитата\" style={{width: '60%'}}/>\n                                </Form.Item>\n                                {fields.length > 1 ? (\n                                    <MinusCircleOutlined\n                                        className=\"dynamic-delete-button\"\n                                        onClick={() => remove(field.name)}\n                                        style={{marginLeft: 8}}\n                                    />\n                                ) : null}\n                            </Form.Item>\n                        ))}\n\n                        <Form.Item>\n                            <Button\n                                type=\"dashed\"\n                                onClick={() => add()}\n                                style={{width: '60%'}}\n                                icon={<PlusOutlined/>}\n                            >\n                                Добавить цитату\n                            </Button>\n                        </Form.Item>\n                    </>)}\n                </Form.List>\n            </Section>\n            <Section label=\"Аннотации\">\n                <Form.List isListField={true} name={[index, \"annotations\"]}>\n                    {(fields, {add, remove}) => (<>\n                        {fields.map((field, index) => (\n                            <Form.Item\n                                required={false}\n                                key={field.key}\n                            >\n                                <Form.Item\n                                    {...field}\n                                    validateTrigger={['onChange', 'onBlur']}\n                                    rules={[\n                                        {\n                                            required: true,\n                                            whitespace: true,\n                                            message: \"Введите аннотацию  к книге\",\n                                        },\n                                    ]}\n                                    noStyle\n                                >\n                                    <Input.TextArea autoSize placeholder=\"Аннотация\" style={{width: '60%'}}/>\n                                </Form.Item>\n                                {fields.length > 1 ? (\n                                    <MinusCircleOutlined\n                                        className=\"dynamic-delete-button\"\n                                        onClick={() => remove(field.name)}\n                                        style={{marginLeft: 8}}\n                                    />\n                                ) : null}\n                            </Form.Item>\n                        ))}\n\n                        <Form.Item>\n                            <Button\n                                type=\"dashed\"\n                                onClick={() => add()}\n                                style={{width: '60%'}}\n                                icon={<PlusOutlined/>}\n                            >\n                                Добавить аннотацию\n                            </Button>\n                        </Form.Item>\n                    </>)}\n                </Form.List>\n            </Section>\n        </Form.Item>\n\n    </Form.Item>)\n}\n\nexport default Book;","import React from \"react\";\nimport {Spin, Alert, Form, Select, Input, Button} from \"antd\";\nimport mainStore from \"../stores/mainStore\";\nimport StepElementsList from \"./StepElementsList\";\nimport {PlusOutlined} from \"@ant-design/icons\";\nimport Book from \"./Book\";\n\nconst {Option} = Select;\n\nconst LoadingResult = () => {\n    return (\n            <Spin>\n                <Form\n                    layout=\"vertical\"\n                >\n                    <Form.Item>\n                        <Form.Item style={{marginBottom: 0}}>\n                            <h2>Основная информация</h2>\n                        </Form.Item>\n\n                        <Form.Item style={{paddingRight: 12, width: '60%', display: 'inline-block'}}>\n                            <Form.Item\n                                label=\"Заголовок\"\n                                name=\"header\"\n                                rules={[{ required: true, message: 'Заголовок не может быть пустым' }]}\n                            >\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item\n                                label=\"Описание\"\n                                name=\"description\"\n                                rules={[{ required: true, message: 'Описание не может быть пустым' }]}\n                            >\n                                <Input.TextArea autoSize/>\n                            </Form.Item>\n                        </Form.Item>\n\n                    </Form.Item>\n\n                    <Form.List name={[\"books\"]}>\n                        {(fields, { add, remove }) => <>\n                            <Form.Item style={{marginBottom: 0}}>\n                                <Form.Item style={{paddingRight: 12, display: 'inline-block'}}>\n                                    <h2>Книги</h2>\n                                </Form.Item>\n                                <Form.Item style={{paddingRight: 12, float: 'right'}}>\n                                    <Button type=\"primary\" icon={<PlusOutlined />} onClick={add}>Добавить книгу</Button>\n                                </Form.Item>\n                            </Form.Item>\n\n                            {fields.length\n                                ? fields.map(f => <Book index={f.name} data={f} remove={remove.bind(null, f.name)}/>)\n                                : <Form.Item style={{marginBottom: 8, paddingTop: 8, paddingBottom: 8, textAlign: 'center'}} className=\"StepElement\">\n                                    <h4>Книги отсутствуют</h4>\n                                </Form.Item>\n                            }\n                        </>}\n                    </Form.List>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" style={{float: \"right\"}}>Сохранить</Button>\n                    </Form.Item>\n                </Form>\n            </Spin>\n    )\n}\n\nexport default LoadingResult","import mainStore from \"../stores/mainStore\";\nimport React, {useEffect, useState} from \"react\";\nimport {observer} from \"mobx-react\";\nimport {useHistory, useParams} from \"react-router\";\nimport {Form, Input, Button, Modal, notification} from 'antd';\nimport Book from \"../components/Book\";\nimport {PlusOutlined} from \"@ant-design/icons\";\nimport LoadingStep from \"../components/LoadingStep\";\nimport LoadingResult from \"../components/LoadingResult\";\n\nconst YAML = require(\"yaml\");\n\n\n\nconst Result = () => {\n    const {title} = useParams()\n    const [result, setResult] = useState(mainStore.results.find(result => result.title === title) || {body: {}})\n    const history = useHistory()\n\n    const [visible, setVisible] = useState(false)\n    const [toSave, setToSave] = useState('')\n\n    useEffect(() => {\n        console.log(title)\n        if (!mainStore.results.length) {\n            mainStore.getDraft().then(() =>{\n                const result = mainStore.results.find(result => result.title === title);\n                if(!result)\n                    history.replace('/error')\n                setResult(result)\n                }\n            )\n        }\n    }, [])\n\n    const onFinish = values => {\n        console.log(values)\n        setToSave(YAML.stringify(values))\n        setVisible(true)\n        console.log(values)\n    };\n\n    const onSave = async () => {\n        try{\n            setVisible(false)\n            await mainStore.setResult(result.title, YAML.parse(toSave))\n            notification.success({message: \"Изменения успешно сохранены\"})\n        }catch (e) {\n            notification.error({message: \"Произошла ошибка при сохранении изменений\"})\n        }\n    }\n\n    if (!result.title)\n        return <LoadingResult/>\n\n    return (\n        <div>\n            <Form\n                layout=\"vertical\"\n                onFinish={onFinish}\n                initialValues={result.body}\n            >\n                {/*{JSON.stringify(result)}*/}\n\n                <Form.Item style={{marginBottom: 0}}>\n                    <h2>Основная информация</h2>\n                </Form.Item>\n\n                <Form.Item style={{paddingRight: 12, width: '60%', display: 'inline-block'}}>\n                    <Form.Item\n                        label=\"Заголовок\"\n                        name=\"header\"\n                        rules={[{ required: true, message: 'Заголовок не может быть пустым' }]}\n                    >\n                        <Input/>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Описание\"\n                        name=\"description\"\n                        rules={[{ required: true, message: 'Описание не может быть пустым' }]}\n                    >\n                        <Input.TextArea autoSize/>\n                    </Form.Item>\n                </Form.Item>\n\n\n                <Form.List name={[\"books\"]}>\n                    {(fields, { add, remove, move }) => <>\n                        <Form.Item style={{marginBottom: 0}}>\n                            <Form.Item style={{paddingRight: 12, display: 'inline-block'}}>\n                                <h2>Книги</h2>\n                            </Form.Item>\n                            <Form.Item style={{paddingRight: 12, float: 'right'}}>\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={e => add({quotes: [''], annotations:['']})}>Добавить книгу</Button>\n                            </Form.Item>\n                        </Form.Item>\n\n                        {fields.length\n                            ? fields.map(f => <Book\n                                index={f.name}\n                                data={f}\n                                remove={remove.bind(null, f.name)}\n                                move={move}\n                                booksCount={fields.length}\n                            />)\n                            : <Form.Item style={{marginBottom: 8, paddingTop: 8, paddingBottom: 8, textAlign: 'center'}} className=\"StepElement\">\n                                <h4>Книги отсутствуют</h4>\n                            </Form.Item>\n                        }\n                    </>}\n                </Form.List>\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" style={{float: \"right\"}}>Сохранить</Button>\n                </Form.Item>\n\n\n            </Form>\n\n\n            <Modal\n                title=\"Подтверждение изменений\"\n                visible={visible}\n                onOk={onSave}\n                okText=\"Сохранить\"\n                cancelText=\"Отмена\"\n                onCancel={setVisible.bind(null,false)}\n                width=\"50%\"\n            >\n                <Input.TextArea value={toSave} onChange={e => setToSave(e.target.value)} autoSize={{maxRows: 15}}/>\n            </Modal>\n\n        </div>\n    )\n}\n\nexport default observer(Result);","import { Result, Button } from 'antd';\nimport React from \"react\";\nimport {useHistory} from \"react-router\";\n\nconst NotFound = () => {\n    const history = useHistory();\n    return <Result\n        status=\"404\"\n        title=\"404\"\n        subTitle=\"Извините, не удается найти данный ресурс :(\"\n        extra={<Button type=\"primary\" onClick={() => history.replace('/steps/')}>На главную</Button>}\n    />\n}\n\nexport default NotFound","import React, {useEffect} from 'react';\nimport './App.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route, Redirect\n} from \"react-router-dom\";\nimport CustomLayout from \"./containers/Layout\";\nimport Steps from \"./containers/Steps\";\nimport Results from \"./containers/Results\";\nimport Statistic from \"./containers/Statistic\";\nimport authStore from \"./stores/authStore\"\nimport Login from \"./containers/Login\";\nimport { observer } from \"mobx-react\"\nimport Step from \"./containers/Step\";\nimport Result from \"./containers/Result\";\nimport NotFound from \"./containers/NotFound\";\n\nfunction App() {\n\n    return (\n        <Router basename={'/admin/v2'}>\n            <Route path=\"/\" exact>\n                <Redirect to=\"/login\"/>\n            </Route>\n\n            {/*<Route path=\"/\">*/}\n            {/*    HELLO world*/}\n            {/*</Route>*/}\n\n            <Route path=\"/login\" exact>\n                {\n                    authStore.loggedIn\n                        ? <Redirect to=\"/steps\"/>\n                        : <Login/>\n                }\n            </Route>\n\n            <Switch>\n                <Route path={['/steps', '/results', '/statistic', '/error']}>\n                    {\n                        !authStore.loggedIn\n                            ? <Redirect to=\"/login\"/>\n                            : <CustomLayout>\n                                <Switch>\n                                    <Route path=\"/steps\" exact>\n                                        <Steps/>\n                                    </Route>\n                                    <Route path=\"/steps/:title\" exact>\n                                        <Step/>\n                                    </Route>\n\n\n                                    <Route path=\"/results\" exact>\n                                        <Results/>\n                                    </Route>\n                                    <Route path=\"/results/:title\" exact>\n                                        <Result/>\n                                    </Route>\n\n\n                                    <Route path=\"/statistic\">\n                                        <Statistic/>\n                                    </Route>\n\n                                    <Route path=\"/error\">\n                                        <NotFound/>\n                                    </Route>\n                                </Switch>\n                            </CustomLayout>\n                    }\n                </Route>\n            </Switch>\n        </Router>\n    )\n}\n\nexport default observer(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}